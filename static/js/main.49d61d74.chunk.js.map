{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/helper.js","nystrum/constants.js","nystrum/message.js","nystrum/actions.js","nystrum/entites.js","nystrum/items.js","nystrum/Keymap/helper.js","nystrum/Keymap/KeyActions/activateDropItem.js","nystrum/Keymap/KeyActions/activateEquipment.js","nystrum/Keymap/KeyActions/activateInventory.js","nystrum/Keymap/KeyActions/activateThrow.js","nystrum/Keymap/KeyActions/walk.js","nystrum/Keymap/KeyActions/addActor.js","nystrum/Keymap/KeyActions/moveCursor.js","nystrum/Keymap/KeyActions/pickupRandom.js","nystrum/Keymap/KeyActions/signing.js","nystrum/Keymap/KeyActions/activateFlyingLotus.js","nystrum/statusEffects.js","nystrum/Keymap/KeyActions/drunkenFist.js","nystrum/Keymap/KeyActions/sandTomb.js","nystrum/Keymap/KeyActions/sandPulseV2.js","nystrum/Keymap/KeyActions/sandWall.js","nystrum/Keymap/KeyActions/none.js","nystrum/Characters/RockLee.js","nystrum/Keymap/KeyActions/removeWeights.js","nystrum/Keymap/KeyActions/leafWhirlwind.js","nystrum/Keymap/KeyActions/openInnerGate.js","nystrum/engine.js","nystrum/game.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Equipment.js","nystrum/UI/Inventory.js","nystrum/UI/Keymap.js","nystrum/UI/Messages.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/Characters/Gaara.js","nystrum/Keymap/KeyActions/sandClone.js","nystrum/Keymap/KeyActions/sandSkin.js","nystrum/Characters/NarutoUzumaki.js","nystrum/Keymap/KeyActions/cloneSelf.js","nystrum/Keymap/KeyActions/charging.js","nystrum/Characters/index.js","nystrum/Nystrum.js","original/lib/helper.js","original/lib/entity.js","original/components/index.js","original/Original.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","TITLE","LEVEL","delay","timeDelayed","Promise","resolve","setTimeout","getRandomInArray","array","Math","floor","random","length","coordsToString","coords","x","y","calculatePath","game","targetPos","currentPos","topology","map","isPassable","type","astar","ROT","AStar","path","compute","push","slice","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","round","cos","PI","sin","destroyEntity","energy","pos","tile","Helper","entities","e","id","engine","removeStatusEffectByActorId","draw","active","COLORS","TILE_KEY","background","foreground","character","passable","animation","HAND_SIGNS","Power","name","description","Energy","Harmony","Healing","Intuition","Awareness","Dimension","Creation","Absolute","DIRECTIONS","N","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","HEAD","TORSO","BACK","HAND","FEET","EQUIPMENT_LAYOUTS","human","item","CLONE_PATTERNS","verticalLine","x_offset","y_offset","positions","taken","smallSquare","square","bigSquare","circle","PARTICLE_TEMPLATES","default","renderer","color","fail","damage","leaf","PARTICLE_TYPE","directional","ALPHABET","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","Message","uuid","this","Base","actor","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","life","direction","particle","Particle","console","log","success","alternative","AddStatusEffect","effect","args","addStatusEffect","forEach","addParticle","sign","Say","message","addMessage","EquipItemFromContainer","equipmentType","itemInSlot","getItemInSlot","addToContainer","unequip","removeFromContainer","equip","UnequipItem","DropItem","PickupItem","it","DestroySelf","destroy","CloneSelf","cloneArgs","createClone","Charge","chargeAmount","increaseCharge","Sign","addSign","SignRelease","requiredSequence","signHistory","concat","relevantHistory","max","JSON","stringify","requiredSequenceIsFulfilled","join","clearSigns","CursorMove","cursorCanOccupyPosition","PlaceActor","canOccupyPosition","addActorAsNext","PlaceItems","targetPositions","clone","cloneDeep","placeActorOnMap","Move","move","Action","ProjectileMove","damageToSelf","MoveMultiple","stepCount","setNextAction","Shove","shove","Tackle","additionalAttackDamage","attack","Attack","entityTypes","includes","SelfDestructiveAttack","decreaseDurabilityWithoutDefense","MultiTargetAttack","particlePath","particlePos","attackSuccess","ThrowProjectile","move_result","shift","ThrowProjectileGas","CrankEngine","start","Entity","Parent","superclass","children","Engine","isInitialized","child","actors","destroyChild","canAttack","bind","addActor","initialize","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","slot","decreaseDurability","Acting","actions","speed","action","value","Rendering","currentFrame","targetTile","newPos","ContainerSlot","itemType","items","Playing","keymap","nextAction","Chasing","targetEntity","Destructable","durability","defense","onDestroy","current","newDurability","getDefense","min","UI_Actor","pipe","initiatedBy","Wall","MovingWall","Bandit","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","projectile","createPath","targetInPath","movePath","Player","charge","chargeMax","container","slots","index","findIndex","createSlot","splice","slotName","find","foundSlot","currentGate","gates","damageBuff","speedBuff","durabilityDebuff","nextGate","nextGateIndex","gate","cloneLimit","clones","c","super__destroy","destroyClone","arg","attribute","Weapon","DestructiveProjectile","DirectionalProjectile","setActorToPrevious","DestructiveCloudProjectileV2","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","step","nextPos","getNextPos","TYPE","sandTomb","structureType","createProjectile","structure","position","targetPosition","createProjectileSingularity","sandTombPart","kunai","directionalKunai","movingSandWall","sword","addAlphabeticallyToKeymap","obj","alphabetAllowed","letter","deactivateUIKeymap","visibleUIKey","currentUiActor","currentActor","removeActor","createEightDirectionMoveOptions","moveFunction","label","w","activate","d","z","a","q","activateDropItem","visibleInventory","ui","addActorAsPrevious","Escape","keymapDropFromInventory","activateEquipment","visibleEquipment","keymapEquipment","activateInventory","keymapEquipFromInventory","keymapCursorToThrowItem","initialKeymap","contains","Item","throwDirectionalKunai","activateThrow","walk","newX","newY","banditStats","banditLevels","entityClass","getBanditStats","randomlyPlaceActorOnMap","moveCursor","pickupRandom","keymapFlyingLotus","previousKeymap","ENERGY_THRESHOLD","goToPreviousKeymap","createFourDirectionMoveOptions","flyingLotus","lifespan","stepInterval","allowDuplicates","onStart","onStep","onStop","timeToLive","timeSinceLastStep","drunkWalk","originalDirection","count","keymapSandTomb","cursor","k","cloud","triggerSandTomb","placeActorsOnMap","createSandWall","triggerSandWall","directionString","result","getDirectionKey","sandWall","s","keymapSandWall","none","Keymap","l","speedBoost","damageDebuff","StatusEffect","j","h","g","setNextGate","nextGateToLabel","getNextGate","o","u","p","t","kunais","Array","fill","swords","statusEffects","isRunning","gainEnergy","hasEnoughEnergy","getAction","perform","acting","timePassed","processActionFX","processStatusEffects","sortActorsByEnergy","processV2","backToTitle","visibleKeymap","updateMode","updateReact","sort","b","newEffect","actorId","removeDeadStatusEffects","actionSuccess","removeActorFromMap","update","removeDeadParticles","process","GAME_MODE_TYPES","WAVE","Game","display","width","fontSize","bg","tileKey","mode","data","level","highestLevel","messages","localStorage","getItem","setItem","addWaveEnemy","nextModeLevel","initializeMode","setModeLevel","kill","placed","ac","digger","Digger","freeCells","create","ceil","randomlyPlaceAllActorsOnMap","hasImpassableEntity","document","getElementById","appendChild","getContainer","parts","tileRenderer","nextFrame","animateTile","animateEntity","frame","isPlaced","presserRef","show","createLevel","focus","handleKeyPress","event","code","Button","props","onClick","className","Information","React","Component","Equipment","Inventory","inventory","entries","style","borderColor","Messages","Level","ENGINE","selectedCharacter","state","activeTab","createRef","setActiveScreen","newGameState","setState","ref","onKeyDown","tabIndex","reverse","CharacterSelect","characters","setSelectedCharacter","Title","height","class","disabled","cloneKeymap","defenseBuff","cloneOverrides","Characters","RockLee","Gaara","NarutoUzumaki","Nystrum","characterKey","selected","activeScreen","titleScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","DRAW","components","getImpassableEntities","impasse","createEntity","world","sendEvent","eventType","parameters","component","self","MAKE_PASSABLE","MAKE_IMPASSABLE","body","MOVE","canOccupy","destructible","DECREASE_DURABILITY","INCREASE_DURABILITY","DESTROY","PREPARE_RENDER","scheduler","Simple","canAct","naruto","reciever","responded","RECIEVE","sender","Components","box","box2","box3","throwable","THROW","nextTile","impassable_and_destructable_entities","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49d61d74.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 0,\n  LEVEL: 1,\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4) => {\n  let map = game.map\n  let isPassable = function (x, y) {\n    if (map[x + \",\" + y]) {\n      return (map[x + \",\" + y].type === 'GROUND');\n    } else {\n      return false\n    }\n  }\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassable, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.black_1,\n    foreground: COLORS.gray_2,\n    character: '.',\n    passable: true,\n  },\n  'WALL': {\n    background: COLORS.black_1,\n    foreground: COLORS.gray_2,\n    character: '#',\n    passable: false,\n  },\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n  'WIN': {\n    background: 'white',\n    foreground: 'black',\n    character: 'W',\n    passable: true,\n  }\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","import { COLORS } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: COLORS.purple_3,\n    backgroundColor: COLORS.black_1,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import * as Helper from '../helper';\nimport * as Action from './actions';\nimport * as Constant from './constants';\nimport { cloneDeep } from 'lodash';\nimport uuid from 'uuid/v1';\nimport { Particle } from './entites';\nimport { MESSAGE_TYPE } from './message';\n\nexport class Base {\n  constructor({\n    game, \n    actor, \n    energyCost = 100, \n    processDelay = 50, \n    particles = [], \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default,\n    onBefore = () => null,\n    onAfter = () => null,\n    onSuccess = () => null,\n    onFailure = () => null,\n    interrupt = false,\n  }) {\n    this.actor = actor\n    this.game = game\n    this.energyCost = energyCost\n    this.processDelay = processDelay\n    this.particles = particles\n    this.particleTemplate = particleTemplate\n    this.onBefore = onBefore\n    this.onAfter = onAfter\n    this.onSuccess = onSuccess\n    this.onFailure = onFailure\n    this.interrupt = interrupt\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = {...this.particleTemplate.renderer}, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    })\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  perform() {\n    console.log(`${this.actor.name} performs`)\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n}\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 0, ...args }) {\n    super({ ...args });\n    this.effect = effect\n    this.processDelay = processDelay\n  }\n\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 2);\n    positions.forEach((pos) => {\n      this.addParticle(\n        5, \n        {...pos}, \n        {\n          x: Math.sign(pos.x - this.actor.pos.x), \n          y: Math.sign(pos.y - this.actor.pos.y)\n        },\n      )\n    })\n    if (success) this.actor.energy -= this.energyCost;\n    return {\n      success,\n      alternative: null,\n    }\n  }\n};\n\nexport class Say extends Base {\n  constructor({ message, processDelay = 50, ...args}) {\n    super({...args});\n    this.message = message\n    this.processDelay = processDelay\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says ${this.message}`, MESSAGE_TYPE.INFORMATION);\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class SayManyThings extends Base {\n  constructor({ messages, processDelay = 50, ...args}) {\n    super({...args});\n    this.messages = messages\n    this.processDelay = processDelay\n  }\n  perform() {\n    let message = this.messages.shift();\n    if (message) {\n      this.game.addMessage(`${this.actor.name} says ${message}`, MESSAGE_TYPE.INFORMATION);\n      this.actor.energy -= this.energyCost;\n    }\n    if (this.messages.length) {\n      this.actor.setNextAction(this);\n    }\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n\n    this.actor.energy -= this.energyCost;\n    \n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class EquipItemFromTile extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n\n  perform () {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities.push(itemInSlot);\n      }\n\n      let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities\n      this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== this.item.id);\n      \n      this.actor.equip(this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n\n    this.actor.energy -= this.energyCost;\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class UnequipItem extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} puts ${this.item.name} away.`, MESSAGE_TYPE.ACTION);\n    this.actor.unequip(this.item);\n    this.actor.addToContainer(this.item);\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class DropItem extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} drops ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.removeFromContainer(this.item);\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities.push(this.item);\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class PickupItem extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} picks up ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.addToContainer(this.item);\n    let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== this.item.id);\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class DestroySelf extends Base {\n  constructor({processDelay = 0, ...args}) {\n    super({...args});\n    this.processDelay = processDelay\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class CloneSelf extends Base {\n  constructor({cloneArgs = [], ...args}) {\n    super({...args});\n    this.cloneArgs = cloneArgs;\n  }\n\n  perform() {\n    let success = false;\n    if (this.actor.createClone(this.cloneArgs)) {\n      success = true;\n      this.actor.energy -= this.energyCost;\n      this.game.addMessage(`${this.actor.name} is cloning itself`, MESSAGE_TYPE.ACTION);\n    }\n    // let clone = cloneDeep(this.actor);\n    // clone.game = this.actor.game;\n    // clone.id = uuid();\n    // this.cloneArgs.forEach((arg) => {\n    //   console.log(arg);\n      \n    //   clone[arg.attribute] = arg.value\n    // });\n    // if (this.game.placeActorOnMap(clone)) {\n    //   this.game.engine.addActorAsNext(clone);\n    //   this.game.draw();\n    //   success = true;\n    // };\n    return {\n      success,\n      alternative: null,\n    }\n  }\n};\n\nexport class Charge extends Base {\n  constructor({chargeAmount, ...args}) {\n    super({...args});\n    this.chargeAmount = chargeAmount;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} is charging up!`, MESSAGE_TYPE.ACTION);\n    this.actor.energy -= this.energyCost;\n    this.actor.increaseCharge(this.chargeAmount);\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class Release extends Base {\n  constructor({ chargeCost, ...args }) {\n    super({ ...args });\n    this.chargeCost = chargeCost;\n  }\n  perform() {\n    let success = false;\n    if (this.actor.charge >= this.chargeCost) {\n      this.game.addMessage(`${this.actor.name} is releasing ${this.chargeCost} volts!`, MESSAGE_TYPE.ACTION);\n      this.actor.energy -= this.energyCost;\n      this.actor.decreaseCharge(this.chargeCost);\n      success = true;\n    }\n    return {\n      success,\n      alternative: null,\n    }\n  }\n};\n\nexport class Sign extends Base {\n  constructor({ sign, ...args }) {\n    super({ ...args });\n    this.sign = sign;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} threw a ${this.sign.name} sign.`, MESSAGE_TYPE.ACTION);\n    this.actor.addSign(this.sign);\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\nexport class SignRelease extends Base {\n  constructor({requiredSequence = [], ...args}) {\n    super({...args});\n    this.requiredSequence = requiredSequence;\n  }\n\n  requiredSequenceIsFulfilled () {\n    let signHistory = this.actor.signHistory.concat();\n    let relevantHistory = signHistory.slice(\n      Math.max(signHistory.length - this.requiredSequence.length, 0)\n    )\n    let result = JSON.stringify(relevantHistory) === JSON.stringify(this.requiredSequence);\n    return result\n  }\n\n  perform() {\n    let success = false;\n    if (this.requiredSequenceIsFulfilled()) {\n      this.game.addMessage(\n        `${this.actor.name} is releasing the power of ${this.requiredSequence.map(\n          (sign) => sign.type\n        ).join(' and ')}!`,\n        MESSAGE_TYPE.ACTION\n      );\n      this.actor.energy -= this.energyCost;\n      success = true;\n      this.actor.clearSigns();\n    }\n    return {\n      success,\n      alternative: null,\n    }\n  }\n};\n\nexport class CursorMove extends Base {\n  constructor({ targetPos, processDelay = 0, ...args}) {\n    super({...args});\n    this.targetPos = targetPos\n    this.processDelay = processDelay\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n\n    if (this.game.cursorCanOccupyPosition(this.targetPos)) {\n      let tile = this.game.map[Helper.coordsToString(this.actor.pos)]\n      this.game.map[Helper.coordsToString(this.actor.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.actor.id) }\n      this.actor.pos = this.targetPos\n      this.game.map[Helper.coordsToString(this.targetPos)].entities.push(this.actor);\n      success = true;\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class ParticleMove extends CursorMove {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  perform () {\n    this.actor.energy -= this.energyCost;\n    if (this.actor.energy <= 0) {\n      this.actor.destroy();\n      return { success: false }\n    } \n    return super.perform();\n  }\n}\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, ...args}) {\n    super({...args});\n    this.targetPos = targetPos\n    this.entity = entity\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    \n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n        \n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    if (this.game.canOccupyPosition(this.targetPos, this.entity)) {\n      this.entity.pos = this.targetPos;\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n      \n    if (success) {\n      this.actor.energy -= this.energyCost;\n    }\n    \n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class PlaceItem extends Base {\n  constructor({ targetPos, entity, processDelay = 25, ...args}) {\n    super({...args});\n    this.targetPos = targetPos\n    this.processDelay = processDelay\n    this.entity = entity\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    \n    if (this.game.canOccupyPosition(this.targetPos, this.entity)) {\n      this.entity.pos = this.targetPos;\n      success = this.game.placeActorOnMap(this.entity)\n    }\n      \n    if (success) {\n      this.actor.energy -= this.energyCost;\n    }\n    \n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class PlaceItems extends PlaceItem {\n  constructor({targetPositions = [], ...args}) {\n    super({...args});\n    this.targetPositions = targetPositions\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.targetPositions.forEach((targetPos) => {\n      if (this.game.canOccupyPosition(targetPos, this.entity)) {\n        let clone = cloneDeep(this.entity);\n        clone.game = this.game;\n        clone.id = uuid();\n        clone.pos = targetPos;\n        let placementSuccess = this.game.placeActorOnMap(clone);\n        if (placementSuccess) success = true;\n      }\n    });\n\n    if (success) this.actor.energy -= this.energyCost;\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args}) {\n    super({...args});\n    this.targetPos = targetPos\n    this.processDelay = processDelay\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    } else {\n      success = true;\n      alternative = new Action.Attack({\n        targetPos: this.targetPos,\n        game: this.game, \n        actor: this.actor, \n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args}) {\n    super({...args});\n    this.targetPos = targetPos\n    this.processDelay = processDelay\n    this.damageToSelf = damageToSelf\n  }\n\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    } else {\n      success = true;\n      alternative = new Action.SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game, \n        actor: this.actor, \n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      })\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args}) {\n    super({...args});\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    \n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.energy -= this.energyCost;\n      this.actor.setNextAction(this);\n      success = true;\n    } else {\n      success = true;\n      alternative = new Action.Attack({\n        targetPos: targetPos,\n        game: this.game, \n        actor: this.actor, \n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos\n    this.direction = direction\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction)\n    \n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    } else {\n      success = true;\n      alternative = new Action.Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, stepCount, additionalAttackDamage = 0, processDelay = 25, ...args}) {\n    super({...args});\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.additionalAttackDamage = additionalAttackDamage;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    \n    if (this.stepCount > 0 && this.actor.shove(targetPos, this.direction)) {\n      this.stepCount -= 1;\n      this.actor.energy -= this.energyCost;\n      this.actor.setNextAction(this);\n      for (let i = 0; i < 3; i++) {\n        this.addParticle(\n          1,\n          {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          },\n          { x: 0, y: 0 }\n        )\n      }\n      success = true;\n    } else {\n      success = true;\n      this.actor.attack(targetPos, this.additionalAttackDamage);\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class Attack extends Base {\n  constructor({ targetPos, processDelay = 100, ...args}) {\n    super({...args});\n    this.targetPos = targetPos\n    this.processDelay = processDelay\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    \n    if (!this.actor.entityTypes.includes('ATTACKING')) { \n      return { \n        success: true, \n        alternative: new Action.Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      } \n    }\n    \n    success = this.actor.attack(this.targetPos);\n    if (success) {\n      this.addParticle(1, {...this.targetPos}, {x: 0, y:0})\n      this.actor.energy -= this.energyCost;\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf)\n    }\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy()\n    }\n  }\n}\n\nexport class MultiTargetAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions\n    this.processDelay = processDelay\n  }\n\n  perform() {\n    let success = false;\n    let alternative = null;\n    \n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Action.Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      }\n    }\n\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let attackSuccess = this.actor.attack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) success = true\n    })\n    this.addParticle(\n      particlePath.length + 1, \n      particlePos, \n      null, \n      renderer, \n      Constant.PARTICLE_TYPE.path, \n      particlePath\n    )\n    \n    if (success) { \n      this.actor.energy -= this.energyCost; \n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n};\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  perform () {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new Action.DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new Action.DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n}\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0\n  }\n\n  perform () {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    } \n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new Action.DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos)\n    }\n\n    return {\n      success,\n      alternative,\n    }\n  }\n}\n\nexport class CrankEngine extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    } catch (error) {\n      console.log('CrankEngine');\n      console.log(error);\n      alternative = new Action.DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    \n    return {\n      success,\n      alternative,\n    }\n  }\n};\n","import uuid from 'uuid/v1';\nimport pipe from 'lodash/fp/pipe';\nimport * as Helper from '../helper';\nimport { destroyEntity } from './Entities/helper';\nimport * as Constant from './constants';\nimport * as Action from './actions';\nimport * as Engine from './engine';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport { MESSAGE_TYPE } from './message';\n\nexport class Entity {\n  constructor({ game = null, passable = false}) {\n    let id = uuid();\n    this.entityTypes = ['Entity']\n    this.id = id;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n\nconst Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new Engine.CrankEngine({}), ...args }) {\n    super({...args })\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw()\n  }\n\n  canAttack (entity) {\n    const childIds = this.children.map((child) => child.id); \n    return !childIds.includes(entity.id)\n  }\n  \n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => {this.destroyChild(actor)};\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor)\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize()\n    }\n\n    let result = new Action.CrankEngine({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n\n    return result;\n  }\n\n}\n\nconst HasInnerGates = superclass => class extends superclass {\n  constructor({ currentGate = null, gates = [], ...args }) {\n    super({ ...args })\n    this.entityTypes = this.entityTypes.concat('HAS_INNER_GATES');\n    this.currentGate = currentGate;\n    this.gates = [\n      {\n        name: 'Gate of Opening',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '1'\n      },\n      {\n        name: 'Gate of Healing',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '2'\n      },\n      {\n        name: 'Gate of Life',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '3'\n      },\n      {\n        name: 'Gate of Pain',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '4'\n      },\n      {\n        name: 'Gate of Limit',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '5'\n      },\n    ];\n  }\n\n  setNextGate() {\n    let currentGate = this.currentGate;\n    let nextGate = null;\n    if (!currentGate) {\n      nextGate = this.gates[0];\n      this.currentGate = { ...nextGate };\n    } else {\n      let nextGateIndex = this.gates.findIndex((gate) => currentGate.name === gate.name) + 1;\n      if (this.gates.length > nextGateIndex) {\n        nextGate = this.gates[nextGateIndex];\n        this.currentGate = { ...nextGate };\n      }\n    }\n    return nextGate;\n  }\n\n  getNextGate() {\n    let currentGate = this.currentGate;\n    let nextGate = null;\n    if (!currentGate) {\n      nextGate = this.gates[0];\n    } else {\n      let nextGateIndex = this.gates.findIndex((gate) => currentGate.name === gate.name) + 1;\n      if (this.gates.length > nextGateIndex) {\n        nextGate = this.gates[nextGateIndex];\n      }\n    }\n    return nextGate;\n  }\n}\n\nconst UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, ...args }) {\n    super({...args })\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n  }\n\n  hasEnoughEnergy() {\n    return this.active;\n  }\n}\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({attackDamage = 1, ...args }) {\n    super({ ...args })\n    this.entityTypes = this.entityTypes.concat('ATTACKING')\n    this.attackDamage = attackDamage;\n  }\n\n  getAttackDamage (additional = 0) {\n    return this.attackDamage + additional;\n  }\n\n  canAttack (entity) {\n    return true;\n  }\n\n  attack (targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)]\n    if (!tile) { return success }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n\n    return success;\n  }\n}\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args })\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE')\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n}\n\nconst Acting = superclass => class extends superclass {\n  constructor({name, actions = [], speed = 100, energy = 0, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('ACTING')\n    this.name = name;\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions)\n    if (action) { return action }\n  }\n\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n}\n\nconst Rendering = superclass => class extends superclass {\n  constructor({pos = {x: 0, y: 0}, renderer, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('RENDERING')\n    this.pos = pos;\n    this.renderer = {...renderer};\n    this.currentFrame = 0;\n  }\n\n  getPosition () {\n    return this.pos;\n  }\n\n  move (targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)]\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) }\n      this.pos = targetPos\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n\n  shove (targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => { \n        if (!entity.passable) {\n          let newX = entity.pos.x + direction[0];\n          let newY = entity.pos.y + direction[1];\n          let newPos = { x: newX, y: newY };\n          entity.move(newPos);\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n}\n\nexport class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nconst Containing = superclass => class extends superclass {\n  constructor({container = [], ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('CONTAINING')\n    this.container = container;\n  }\n\n  createSlot (item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot)\n  }\n\n  contains (itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n\n  addToContainer (item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    } else {\n      this.createSlot(item);\n    }\n  }\n  \n  removeFromContainer (item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length) this.container.splice(index, 1);\n    });\n  }\n}\n\nconst Equiping = superclass => class extends superclass {\n  constructor({equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('EQUIPING')\n    this.equipment = equipment;\n  }\n\n  getItemInSlot (slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName)\n    })\n    if (openSlots.length > 0) { return false; }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) { return false; }\n    if (!slot.item) { return false; }\n    return slot.item;\n  }\n\n  equip (slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n      }\n      return slot;\n    })\n  }\n  \n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n        }\n      }\n      return slot;\n    })\n  }\n}\n\nconst Charging = superclass => class extends superclass {\n  constructor({charge = 10, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('CHARGING')\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  \n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n}\n\nconst Signing = superclass => class extends superclass {\n  constructor({...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('SIGNING')\n    this.signHistory = [];\n  }\n\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  \n  clearSigns() {\n    this.signHistory = [];\n  }\n}\n\nconst Playing = superclass => class extends superclass {\n  constructor({keymap = {}, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('PLAYING')\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n\n    setNextAction(action) {\n      this.nextAction = action;\n    }\n\n    getAction() {\n      let action = this.nextAction;\n      this.nextAction = null;\n      return action;\n    }\n}\n\nconst Cloning = superclass => class extends superclass {\n  constructor({cloneLimit = 1, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('CLONING')\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  \n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  \n  // status effects should be removed from engine when owner is removed.\n  \n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone)\n      });\n    }\n    destroyEntity(this);\n  }\n\n  destroyClone (id) {\n  // overrides clone destroy function\n  // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id == id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n\n  createClone (cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name += ` Clone ${this.clones.length}`\n      clone.game = this.game;\n      clone.id = uuid();\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id) };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      };\n    }\n    return false;\n  }\n}\n\nconst Projecting = superclass => class extends superclass {\n  constructor({path = false, targetPos = null ,...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('PROJECTING')\n    this.path = path;\n    this.targetPos = targetPos;\n  }\n\n  createPath (game) {\n    let path = Helper.calculatePath(game, this.targetPos, this.pos, 8);\n    this.path = path;\n  }\n\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new Action.Move({\n      targetPos, \n      game, \n      actor: this, \n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      this.path.shift();\n    }\n    return result;\n  }\n}\n\nconst DestructiveProjecting = superclass => class extends superclass {\n  constructor({path = false, targetPos = null, attackDamage = 1, range = 3, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING')\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n\n  createPath (game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n\n  getAction (game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    \n    let result = new Action.ThrowProjectile({\n      targetPos, \n      game, \n      actor: this, \n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n\n    return result;\n  }\n}\n\nconst DirectionalProjecting = superclass => class extends superclass {\n  constructor({path = false, direction = {x: 0, y: 0}, attackDamage = 1, range = 3, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING')\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      })\n    }\n    this.path = path;\n  }\n\n  getAction (game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false\n    \n    if (this.range > 0) {\n      result = new Action.ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      })\n    } else {\n      result = new Action.DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      })\n    }\n\n    return result;\n  }\n}\n\nconst DirectionalPushing = superclass => class extends superclass {\n  constructor({path = false, direction = {x: 0, y: 0}, range = 3, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING')\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n\n  getAction (game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false\n    \n    if (this.range > 0) {\n      result = new Action.Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      })\n    } else {\n      result = new Action.DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      })\n    }\n\n    return result;\n  }\n}\n\nconst GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING')\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n\n  canAttack (entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success\n  }\n\n  createPath (game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n\n  getAction (game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    \n    let result = new Action.ThrowProjectileGas({\n      targetPos, \n      game, \n      actor: this, \n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n\n    return result;\n  }\n}\n\nconst Gaseous = superclass => class extends superclass {\n  constructor({\n    isClone = false,\n    cloneCount = 0,\n    clonePattern = Constant.CLONE_PATTERNS.square,\n    ...args\n  }) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('GASEOUS')\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n\n  getAction (game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null\n            break;\n          default:\n            return undefined\n            break;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        }\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          }\n        })\n      }\n      clone.isClone = true\n      this.cloneCount += 1\n      game.placeActorOnMap(clone)\n      game.engine.addActor(clone);\n      game.draw();\n    }\n\n    let result = super.getAction(game);\n    return result;\n  }\n}\n\nconst Chasing = superclass => class extends superclass {\n  constructor({targetEntity = null ,...args}) {\n    super({...args})\n    this.entityTypes = this.entityTypes.concat('CHASING')\n    this.targetEntity = targetEntity;\n  }\n\n  getAction(game) {\n    let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = path.length > 0 ? path[0] : this.pos;\n\n    let result = new Action.Move({\n      targetPos, \n      game, \n      actor: this, \n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n}\n\nconst RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args })\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING')\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n\n  targetInPath (pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    })\n    return inPath;\n  }\n\n  getAction(game) {\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    }\n\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new Action.PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        })\n      }\n      return new Action.Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    \n    return new Action.Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n\n  }\n}\n\nconst Pushing = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, ...args }) {\n    super({ ...args })\n    this.entityTypes = this.entityTypes.concat('PUSHING')\n    this.path = path;\n    this.targetPos = targetPos;\n  }\n\n  createPath(game) {\n    let path = Helper.calculatePath(game, this.targetPos, this.pos, 8);\n    this.path = path;\n  }\n\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let direction = [\n      targetPos.x - this.pos.x ,\n      targetPos.y - this.pos.y ,\n    ]\n    if (direction[0] === 0 && direction[1] === 0) {\n      return new Action.DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    let result = new Action.Shove({\n      targetPos,\n      direction,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    this.path.shift();\n\n    return result;\n  }\n}\n\nconst Destructable = superclass => class extends superclass {\n  constructor({durability = 1, defense = 0 ,onDestroy = () => null, ...args }) {\n    super({ ...args })\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE')\n    this.durability = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n  }\n\n  getDefense () {\n    // add in reducer to get defense stats of all equpiment\n    return this.defense;\n  }\n\n  decreaseDurabilityWithoutDefense (value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n\n  decreaseDurability (value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n\n  increaseDurability (value) {\n    this.durability += value\n  }\n\n  destroy () {\n    this.onDestroy();\n    destroyEntity(this);\n  }\n}\n\nconst IsParticle = superclass => class extends superclass {\n  constructor({\n    pos = { x: 1, y: 1 },\n    direction = { x: 0, y: 0 },\n    life = 1,\n    speed = 1,\n    type = Constant.PARTICLE_TYPE.directional,\n    path = null,\n    ...args\n  }) {\n    super({ ...args })\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE')\n  }\n\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        }\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? {...nextPos} : {...this.pos}\n    }\n  }\n\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n}\n\nexport const UI_Actor = pipe(\n  Acting, \n  Rendering, \n  Playing, \n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting, \n  Rendering\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting, \n  Rendering, \n  Chasing, \n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting, \n  Rendering, \n  Chasing, \n  Destructable,\n  Attacking,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting, \n  Rendering, \n  RangedChasing, \n  Destructable,\n  Attacking,\n)(Entity);\n\nexport const Player = pipe(\n  Acting, \n  Rendering, \n  Charging, \n  Signing, \n  Containing, \n  Equiping, \n  Attacking, \n  HasInnerGates,\n  Destructable, \n  Cloning,\n  Playing,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering, \n  Equipable, \n  Attacking\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting, \n  Rendering, \n  Attacking, \n  DestructiveProjecting, \n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting, \n  Rendering, \n  Attacking, \n  DirectionalProjecting, \n  Destructable\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting, \n  Rendering, \n  Attacking, \n  GaseousDestructiveProjecting, \n  Destructable, \n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting, \n  Destructable,\n  Parent, \n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting, \n  Destructable,\n  Parent, \n)(Entity);","import * as Entity from './entites';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new Entity.DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new Entity.DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new Entity.DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new Entity.DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', foreground: 'white', character: '>', },\n      { background: '', foreground: 'white', character: 'v', },\n      { background: '', foreground: 'white', character: '<', },\n      { background: '', foreground: 'white', character: '^', },\n      { background: '', foreground: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new Entity.DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', foreground: 'grey', character: '>', },\n      { background: 'lightgrey', foreground: 'grey', character: 'v', },\n      { background: 'lightgrey', foreground: 'grey', character: '<', },\n      { background: 'lightgrey', foreground: 'grey', character: '^', },\n      { background: 'lightgrey', foreground: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new Entity.MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new Entity.DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new Entity.DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new Entity.DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new Entity.DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new Entity.DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Entity.Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Entity.Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { ALPHABET, DIRECTIONS } from '../constants';\n\nexport const addAlphabeticallyToKeymap = (keymap, obj) => {\n  let alphabetAllowed = ALPHABET.filter((letter) => {\n    return !Object.keys(keymap).includes(letter);\n  });\n  keymap[alphabetAllowed[0]] = obj;\n}\n\nexport const deactivateUIKeymap = (engine, visibleUIKey) => {\n  let currentUiActor = engine.actors[engine.currentActor];\n  engine.game.removeActor(currentUiActor);\n  engine.game[visibleUIKey] = null;\n}\n\nexport const createFourDirectionMoveOptions = (moveFunction, engine, label = 'move') => {\n  return {\n    w: {\n      activate: () => moveFunction(DIRECTIONS.N, engine),\n      label: `${label} N`,\n    },\n    d: {\n      activate: () => moveFunction(DIRECTIONS.E, engine),\n      label: `${label} E`,\n    },\n    x: {\n      activate: () => moveFunction(DIRECTIONS.S, engine),\n      label: `${label} S`,\n    },\n    a: {\n      activate: () => moveFunction(DIRECTIONS.W, engine),\n      label: `${label} W`,\n    },\n  }\n}\n\nexport const createEightDirectionMoveOptions = (moveFunction, engine, label = 'move') => {\n  return {\n    w: {\n      activate: () => moveFunction(DIRECTIONS.N, engine),\n      label: `${label} N`,\n    },\n    e: {\n      activate: () => moveFunction(DIRECTIONS.NE, engine),\n      label: `${label} NE`,\n    },\n    d: {\n      activate: () => moveFunction(DIRECTIONS.E, engine),\n      label: `${label} E`,\n    },\n    c: {\n      activate: () => moveFunction(DIRECTIONS.SE, engine),\n      label: `${label} SE`,\n    },\n    x: {\n      activate: () => moveFunction(DIRECTIONS.S, engine),\n      label: `${label} S`,\n    },\n    z: {\n      activate: () => moveFunction(DIRECTIONS.SW, engine),\n      label: `${label} SW`,\n    },\n    a: {\n      activate: () => moveFunction(DIRECTIONS.W, engine),\n      label: `${label} W`,\n    },\n    q: {\n      activate: () => moveFunction(DIRECTIONS.NW, engine),\n      label: `${label} NW`,\n    },\n  }\n}","import * as Constant from '../../constants';\nimport { UI_Actor } from '../../entites';\nimport { DropItem } from '../../actions';\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapDropFromInventory = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      // g: {\n      activate: () => deactivateUIKeymap(engine, 'visibleInventory'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.container.map((slot, index) => {\n    const item = slot.items[0];\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      console.log(`setting action for ${initiatedBy.name} to drop ${item.name}`);\n      initiatedBy.setNextAction(new DropItem({\n        item,\n        game: engine.game,\n        actor: initiatedBy,\n        energyCost: Constant.ENERGY_THRESHOLD\n      }));\n      deactivateUIKeymap(engine, 'visibleInventory');\n    }\n    obj['label'] = `Drop ${item.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateDropItem = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleInventory = currentActor.container;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'D',\n      color: 'white',\n      background: '',\n    },\n    name: 'Drop',\n    game: engine.game,\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapDropFromInventory(engine, currentActor);\n}","import { UI_Actor } from '../../entites';\nimport { UnequipItem } from '../../actions';\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapEquipment = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      activate: () => deactivateUIKeymap(engine, 'visibleEquipment'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.equipment.filter((slot) => slot.item).map((slot) => {\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      console.log(`setting action for ${initiatedBy.name} to unequip ${slot.item.name}`);\n      initiatedBy.setNextAction(new UnequipItem({\n        item: slot.item,\n        game: engine.game,\n        actor: initiatedBy,\n      }))\n      deactivateUIKeymap(engine, 'visibleEquipment');\n    }\n    obj['label'] = `Unequip ${slot.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateEquipment = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleEquipment = currentActor.equipment;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'E',\n      color: 'white',\n      background: '',\n    },\n    name: 'Equipment',\n    game: engine.game,\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapEquipment(engine, currentActor);\n}","import { UI_Actor } from '../../entites';\nimport { EquipItemFromContainer } from '../../actions';\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapEquipFromInventory = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      activate: () => deactivateUIKeymap(engine, 'visibleInventory'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.container.map((slot, index) => {\n    const item = slot.items[0];\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      console.log(`setting action for ${initiatedBy.name} to equip ${item.name}`);\n      initiatedBy.setNextAction(new EquipItemFromContainer({\n        item,\n        game: engine.game,\n        actor: initiatedBy,\n      }))\n      deactivateUIKeymap(engine, 'visibleInventory');\n    }\n    obj['label'] = `Equip ${item.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateInventory = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleInventory = currentActor.container;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'I',\n      color: 'white',\n      background: '',\n    },\n    name: 'Inventory',\n    game: engine.game,\n    // keymap: keymapEquipFromInventory(engine, currentActor),\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapEquipFromInventory(engine, currentActor);\n}","import * as Action from '../../actions';\nimport * as Constant from '../../constants';\nimport * as Item from '../../items';\nimport { UI_Actor } from '../../entites';\nimport { createEightDirectionMoveOptions } from '../helper';\n\nconst throwDirectionalKunai = (direction, engine, actor) => {\n  let kunai = actor.contains(Item.TYPE.DIRECTIONAL_KUNAI);\n  if (kunai) {\n    kunai.game = engine.game;\n    kunai.pos = {\n      x: actor.pos.x,\n      y: actor.pos.y,\n    };\n    kunai.direction = direction;\n    actor.removeFromContainer(kunai);\n    actor.setNextAction(\n      new Action.PlaceActor({\n        targetPos: { ...kunai.pos },\n        entity: kunai,\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    )\n\n  } else {\n    console.log('I have no kunais left');\n  }\n}\n\nconst keymapCursorToThrowItem = (engine, initiatedBy, initialKeymap) => {\n  return {\n    ...createEightDirectionMoveOptions(\n      (direction, engine) => {\n        throwDirectionalKunai(direction, engine, initiatedBy);\n        initiatedBy.keymap = initialKeymap;\n      },\n      engine,\n      'throw',\n    )\n  }\n}\n\nexport const activateThrow = (engine) => {\n  let game = engine.game;\n  let currentActor = engine.actors[game.engine.currentActor]\n  let initialKeymap = currentActor.keymap;\n  currentActor.keymap = keymapCursorToThrowItem(engine, currentActor, initialKeymap);\n}","import { Move } from '../../actions';\nimport * as Constant from '../../constants';\n\nexport const walk = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new Move({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: Constant.ENERGY_THRESHOLD\n  }))\n}","import * as Helper from '../../../helper';\nimport { Bandit, RangedBandit } from '../../entites';\nimport * as Item from '../../items';\n\nconst getBanditStats = () => {\n  let banditLevels = [\n    {\n      name: 'Slingshot',\n      renderer: {\n        character: Helper.getRandomInArray(['S']),\n        color: '#ced5dd',\n        background: '',\n      },\n      durability: 1,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: RangedBandit\n    },\n    {\n      name: 'Buckshot',\n      renderer: {\n        character: Helper.getRandomInArray(['B']),\n        color: '#3fc072',\n        background: '',\n      },\n      durability: 2,\n      attackDamage: 1,\n      speed: 200,\n      entityClass: RangedBandit\n    },\n    {\n      name: 'Ross',\n      renderer: {\n        character: Helper.getRandomInArray(['◉']),\n        color: '#ced5dd',\n        background: '',\n      },\n      durability: 1,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: Bandit\n    },\n    {\n      name: 'Kevin',\n      renderer: {\n        character: Helper.getRandomInArray(['◉']),\n        color: '#3fc072',\n        background: '',\n      },\n      durability: 2,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: Bandit\n    },\n    {\n      name: 'Jacob',\n      renderer: {\n        character: Helper.getRandomInArray(['◉']),\n        color: '#67a1d7',\n        background: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      speed: 100,\n      entityClass: Bandit\n    },\n    {\n      name: 'Jarod',\n      renderer: {\n        character: Helper.getRandomInArray(['◉']),\n        color: '#e16264',\n        background: '',\n      },\n      durability: 1,\n      attackDamage: 5,\n      speed: 300,\n      entityClass: Bandit\n    },\n    {\n      name: 'Bigii',\n      renderer: {\n        character: Helper.getRandomInArray(['◉']),\n        color: '#9f62e1',\n        background: '',\n      },\n      durability: 15,\n      attackDamage: 10,\n      speed: 100,\n      entityClass: Bandit\n    },\n  ]\n  return Helper.getRandomInArray(banditLevels);\n\n}\n\nexport const addActor = (game) => {\n  let targetEntity = game.engine.actors[game.engine.currentActor]\n  let pos = Helper.getRandomPos(game.map).coordinates\n  const banditStats = getBanditStats();\n  // let actor = new RangedBandit({\n  let actor = new banditStats.entityClass({\n    targetEntity,\n    pos,\n    renderer: banditStats.renderer,\n    name: banditStats.name,\n    game,\n    actions: [],\n    attackDamage: banditStats.attackDamage,\n    durability: banditStats.durability,\n    speed: banditStats.speed,\n    // directional projectile destruction breaks engine\n    getProjectile: ({pos, targetPos, direction, range}) => Item.directionalKunai(game.engine, { ...pos }, direction, range)\n    // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n  })\n  // game.placeActorOnMap(actor)\n  if (game.randomlyPlaceActorOnMap(actor)) {\n    game.engine.addActor(actor);\n    game.draw();\n  };\n}","import { CursorMove } from '../../actions';\n\nexport const moveCursor = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new CursorMove({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: 0,\n  }))\n}","import { PickupItem } from '../../actions';\nimport { ENERGY_THRESHOLD } from '../../constants';\nimport { coordsToString, getRandomInArray } from '../../../helper';\n\nexport const pickupRandom = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let entities = engine.game.map[coordsToString(actor.pos)].entities.filter((e) => e.id !== actor.id);\n  if (entities.length > 0) {\n    actor.setNextAction(new PickupItem({\n      item: getRandomInArray(entities),\n      game: engine.game,\n      actor,\n      energyCost: ENERGY_THRESHOLD\n    }));\n  }\n  else {\n    console.log('nothing to pickup.');\n  }\n};","import { Sign, SignRelease } from '../../actions';\nimport { ENERGY_THRESHOLD, HAND_SIGNS } from '../../constants';\n\n/******************** PLAYER ********************/\nexport const sign = (sign, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Sign({\n    sign,\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }));\n};\n\nexport const signRelease = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new SignRelease({\n    requiredSequence: [\n      HAND_SIGNS.Power,\n      HAND_SIGNS.Healing,\n    ],\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }));\n};","import { Tackle } from '../../actions';\nimport { ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../../constants';\nimport { createFourDirectionMoveOptions } from '../helper';\n\nconst flyingLotus = (direction, stepCount, energyCost, additionalAttackDamage, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Tackle({\n    direction,\n    stepCount,\n    game: engine.game,\n    actor,\n    additionalAttackDamage,\n    energyCost,\n    particleTemplate: PARTICLE_TEMPLATES.leaf\n  }))\n}\n\nconst keymapFlyingLotus = (engine, initiatedBy, previousKeymap) => {\n  const energyCost = Math.floor(ENERGY_THRESHOLD / 2);\n  const stepCount = Math.floor(initiatedBy.energy / energyCost) - 1;\n  const additionalAttackDamage = stepCount;\n  const goToPreviousKeymap = () => initiatedBy.keymap = previousKeymap;\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Close',\n    },\n    ...createFourDirectionMoveOptions(\n      (direction, engine) => {\n        flyingLotus(direction, stepCount, energyCost, additionalAttackDamage, engine);\n        goToPreviousKeymap();\n      },\n      engine,\n      'activate',\n    ),\n  };\n}\n\nexport const activateFlyingLotus = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  currentActor.keymap = keymapFlyingLotus(engine, currentActor, { ...currentActor.keymap });\n}","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n  }\n}","import { DIRECTIONS, ENERGY_THRESHOLD } from '../../constants';\nimport * as StatusEffect from '../../statusEffects';\nimport { AddStatusEffect, Move } from '../../actions';\nimport { walk } from './walk';\nimport { getRandomInArray } from '../../../helper';\n\nconst drunkWalk = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let originalDirection = [...direction];\n  let chance = Math.random();\n  if (chance < 0.5) {\n    console.log('drunk misstep');\n    let count = 100\n    while ((direction[0] === originalDirection[0] && direction[1] === originalDirection[1]) || count < 0) {\n      count -= 1;\n      direction = DIRECTIONS[getRandomInArray(Object.keys(DIRECTIONS))];\n    }\n    console.log(count);\n  }\n\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new Move({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }))\n}\n\nexport const drunkenFist = (engine, damageBuff = 1) => {\n  let currentActor = engine.actors[engine.currentActor];\n\n  let effect = new StatusEffect.Base({\n    game: engine.game,\n    actor: currentActor,\n    name: 'Drunk',\n    lifespan: 1000,\n    stepInterval: 100,\n    allowDuplicates: false,\n    onStart: () => {\n      currentActor.attackDamage += damageBuff;\n      currentActor.renderer.character = '?';\n      console.log(`${currentActor.name} took a sip of sake.`);\n      currentActor.keymap.w = {\n        activate: () => drunkWalk(DIRECTIONS.N, engine),\n        label: 'drunken walk'\n      }\n      currentActor.keymap.a = {\n        activate: () => drunkWalk(DIRECTIONS.W, engine),\n        label: 'drunken walk'\n      }\n      currentActor.keymap.s = {\n        activate: () => drunkWalk(DIRECTIONS.S, engine),\n        label: 'drunken walk'\n      }\n      currentActor.keymap.d = {\n        activate: () => drunkWalk(DIRECTIONS.E, engine),\n        label: 'drunken walk'\n      }\n    },\n    onStop: () => {\n      currentActor.attackDamage -= damageBuff;\n      currentActor.renderer.character = 'R';\n      console.log(`${currentActor.name} recovered from drunkeness.`);\n      currentActor.keymap.w = {\n        activate: () => walk(DIRECTIONS.N, engine),\n        label: 'walk'\n      }\n      currentActor.keymap.a = {\n        activate: () => walk(DIRECTIONS.W, engine),\n        label: 'walk'\n      }\n      currentActor.keymap.s = {\n        activate: () => walk(DIRECTIONS.S, engine),\n        label: 'walk'\n      }\n      currentActor.keymap.d = {\n        activate: () => walk(DIRECTIONS.E, engine),\n        label: 'walk'\n      }\n    },\n  });\n  currentActor.setNextAction(new AddStatusEffect({\n    effect,\n    actor: currentActor,\n    game: engine.game,\n    processDelay: 100,\n    particleTemplate: {\n      renderer: {\n        color: '#c45ffd',\n        background: '#424242',\n        character: '?'\n      }\n    },\n  }));\n}","import * as Action from '../../actions';\nimport * as Item from '../../items';\nimport * as Constant from '../../constants';\nimport { UI_Actor } from '../../entites';\nimport { moveCursor } from './moveCursor';\nimport { createEightDirectionMoveOptions } from '../helper';\n\n// ------------ SAND TOMB ----------------------\nconst triggerSandTomb = (engine, actor) => {\n  let cursor = engine.actors[engine.currentActor];\n  // let cloud = Item.sandBurst({\n  let cloud = Item.sandTomb({\n    engine,\n    actor,\n    targetPos: { ...cursor.pos },\n  });\n\n  if (cloud) {\n    engine.addActorAsNext(cloud);\n    actor.setNextAction(\n      // new Action.Say({\n      //   game: engine.game,\n      //   actor,\n      //   message: 'I\\'ll crush you!',\n      //   energyCost: Constant.ENERGY_THRESHOLD\n      // })\n      new Action.PlaceActor({\n        targetPos: { ...cursor.pos },\n        entity: cloud,\n        game: engine.game,\n        actor,\n        // energyCost: actor.energy\n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    )\n  }\n}\n\nconst keymapSandTomb = (engine, initiatedBy, previousKeymap) => {\n  const goToPreviousKeymap = () => {\n    let cursor = engine.actors[engine.currentActor];\n    cursor.active = false;\n    engine.game.removeActor(cursor);\n  };\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Close',\n    },\n    ...createEightDirectionMoveOptions(moveCursor, engine),\n    k: {\n      activate: () => {\n        triggerSandTomb(engine, initiatedBy);\n        goToPreviousKeymap();\n      },\n      label: 'activate'\n    },\n  };\n}\n\nexport const sandTomb = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  let game = engine.game;\n  let pos = currentActor.pos;\n\n  let cursor = new UI_Actor({\n    initiatedBy: currentActor,\n    pos,\n    renderer: {\n      character: '█',\n      color: 'white',\n      background: '',\n    },\n    name: 'Cursor',\n    game,\n    keymap: keymapSandTomb(engine, currentActor, { ...currentActor.keymap }),\n  })\n  engine.addActorAsPrevious(cursor);\n  game.placeActorOnMap(cursor)\n  game.draw()\n}","import * as Action from '../../actions';\nimport * as Constant from '../../constants';\nimport { movingSandWall } from '../../items';\nimport { UI_Actor } from '../../entites';\n\nconst throwDirectionalKunai = (direction, engine, actor) => {\n  let cursor = engine.actors[engine.currentActor];\n  cursor.active = false;\n  engine.game.removeActor(cursor);\n  let kunai = movingSandWall(engine, {...actor.pos}, direction, 10);\n  if (kunai) {\n    kunai.game = engine.game;\n    kunai.direction = direction;\n    actor.removeFromContainer(kunai);\n    engine.addActorAsPrevious(kunai);\n    engine.game.placeActorsOnMap();\n    engine.game.draw();\n    actor.setNextAction(\n      new Action.Say({\n        message: `I'll get you with this kunai!`,\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      })\n    )\n  } else {\n    console.log('I have no kunais left');\n  }\n}\n\nconst keymapCursorToThrowItem = (engine, initiatedBy) => {\n  return {\n    w: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.N, engine, initiatedBy),\n      label: 'throw N',\n    },\n    e: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.NE, engine, initiatedBy),\n      label: 'throw NE',\n    },\n    d: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.E, engine, initiatedBy),\n      label: 'throw E',\n    },\n    c: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.SE, engine, initiatedBy),\n      label: 'throw SE',\n    },\n    x: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.S, engine, initiatedBy),\n      label: 'throw S',\n    },\n    z: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.SW, engine, initiatedBy),\n      label: 'throw SW',\n    },\n    a: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.W, engine, initiatedBy),\n      label: 'throw W',\n    },\n    q: {\n      activate: () => throwDirectionalKunai(Constant.DIRECTIONS.NW, engine, initiatedBy),\n      label: 'throw NW',\n    },\n  };\n}\n\nexport const sandPulse = (engine) => {\n  let game = engine.game;\n  let currentActor = engine.actors[game.engine.currentActor]\n  let pos = currentActor.pos;\n\n  let cursor = new UI_Actor({\n    initiatedBy: currentActor,\n    pos,\n    renderer: {\n      character: '█',\n      color: 'white',\n      background: '',\n    },\n    name: 'Cursor',\n    game,\n    keymap: keymapCursorToThrowItem(engine, currentActor),\n  })\n  engine.addActorAsPrevious(cursor);\n  engine.game.placeActorOnMap(cursor)\n  engine.game.draw()\n}","import { Wall } from '../../entites';\nimport { PlaceItems } from '../../actions';\nimport { TYPE } from '../../items';\nimport { getDirectionKey, DIRECTIONS, ENERGY_THRESHOLD } from '../../constants';\n\n// ------------ SAND WALL ----------------------\nconst createSandWall = (engine, pos) => new Wall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.BARRIER,\n  durability: 3,\n})\n\nconst triggerSandWall = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let targetPositions = [];\n  let directionKey = getDirectionKey(direction);\n  switch (directionKey) {\n    case 'N':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y - 1,\n        },\n      ]);\n      break;\n    case 'S':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y + 1,\n        },\n        {\n          x: actor.pos.x,\n          y: actor.pos.y + 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    case 'E':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    case 'W':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y,\n        },\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    default:\n      break;\n  }\n  actor.setNextAction(new PlaceItems({\n    targetPositions,\n    entity: createSandWall(engine, { ...actor.pos }),\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }))\n}\n\nconst keymapSandWall = (engine, initiatedBy, previousKeymap) => {\n  const goToPreviousKeymap = () => initiatedBy.keymap = previousKeymap;\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Close',\n    },\n    w: {\n      activate: () => {\n        triggerSandWall(DIRECTIONS.N, engine);\n        goToPreviousKeymap();\n      },\n      label: 'activate N',\n    },\n    d: {\n      activate: () => {\n        triggerSandWall(DIRECTIONS.E, engine);\n        goToPreviousKeymap();\n      },\n      label: 'activate E',\n    },\n    s: {\n      activate: () => {\n        triggerSandWall(DIRECTIONS.S, engine);\n        goToPreviousKeymap();\n      },\n      label: 'activate S',\n    },\n    a: {\n      activate: () => {\n        triggerSandWall(DIRECTIONS.W, engine);\n        goToPreviousKeymap();\n      },\n      label: 'activate W',\n    },\n  };\n}\n\nexport const sandWall = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  currentActor.keymap = keymapSandWall(engine, currentActor, { ...currentActor.keymap });\n}","import { Say } from '../../actions';\nimport * as Constant from '../../constants';\n\nexport const none = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Say({\n    message: 'standing still...',\n    game: engine.game,\n    actor,\n    energyCost: Constant.ENERGY_THRESHOLD\n  }))\n}","// import deps\nimport * as Item from '../items';\nimport * as Entity from '../entites';\nimport * as Constant from '../constants';\nimport * as Keymap from '../Keymap';\nimport { createEightDirectionMoveOptions } from '../Keymap/helper';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine) => {\n    return {\n      ...createEightDirectionMoveOptions(Keymap.walk, engine),\n      s: {\n        activate: () => Keymap.none(engine),\n        label: 'stay',\n      },\n      l: {\n        activate: () => Keymap.activateFlyingLotus(engine),\n        label: 'Flying Lotus',\n      },\n      k: {\n        activate: () => Keymap.removeWeights(engine, 200),\n        label: 'Remove wraps',\n      },\n      j: {\n        activate: () => Keymap.drunkenFist(engine),\n        label: 'Sip Sake',\n      },\n      h: {\n        activate: () => Keymap.leafWhirlwind(engine),\n        label: 'Leaf Whirlwind',\n      },\n      g: {\n        activate: () => Keymap.openInnerGate(engine),\n        label: 'Gate of Opening',\n      },\n      i: {\n        activate: () => Keymap.activateInventory(engine),\n        label: 'Open Inventory',\n      },\n      o: {\n        activate: () => Keymap.activateEquipment(engine),\n        label: 'Open Equipment',\n      },\n      u: {\n        activate: () => Keymap.activateDropItem(engine),\n        label: 'Drop Item',\n      },\n      p: {\n        activate: () => Keymap.pickupRandom(engine),\n        label: 'Pickup',\n      },\n      t: {\n        activate: () => Keymap.activateThrow(engine),\n        label: 'Throw',\n      },\n      // DEV KEYS\n      y: {\n        activate: () => Keymap.addActor(engine.game),\n        label: 'Add NPC',\n      },\n    };\n  }\n  // instantiate class\n  let actor = new Entity.Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'R',\n      color: '#e6e6e6',\n      background: '#36635b',\n    },\n    name: 'Rock Lee',\n    actions: [],\n    speed: 400,\n    durability: 20,\n    keymap: keymap(engine),\n  })\n\n  // add default items to container\n  const kunais = Array(100).fill('').map(() => Item.directionalKunai(engine, { ...actor.pos }, null, 10));\n  const swords = Array(2).fill('').map(() => Item.sword(engine));\n  actor.container = [\n    new Entity.ContainerSlot({\n      itemType: kunais[0].name,\n      items: kunais,\n    }),\n    new Entity.ContainerSlot({\n      itemType: swords[0].name,\n      items: swords,\n    }),\n  ]\n\n  return actor;\n}","import * as StatusEffect from '../../statusEffects';\nimport { AddStatusEffect } from '../../actions';\n\nexport const removeWeights = (engine, speedBoost = 600, damageDebuff = 1) => {\n  let currentActor = engine.actors[engine.currentActor];\n\n  let effect = new StatusEffect.Base({\n    game: engine.game,\n    actor: currentActor,\n    name: 'Removed wraps (weights)',\n    lifespan: 1000,\n    stepInterval: 100,\n    allowDuplicates: false,\n    onStart: () => {\n      currentActor.speed += speedBoost;\n      currentActor.attackDamage = Math.max(0, currentActor.attackDamage - damageDebuff);\n      currentActor.energy += speedBoost;\n      currentActor.renderer.character = '〣'\n      console.log(`${currentActor.name} removed weighted wraps.`);\n    },\n    onStop: () => {\n      currentActor.speed -= speedBoost;\n      currentActor.attackDamage += damageDebuff;\n      currentActor.renderer.character = 'R'\n      console.log(`${currentActor.name} rewrapped weights.`);\n    },\n  });\n  currentActor.setNextAction(new AddStatusEffect({\n    effect,\n    actor: currentActor,\n    game: engine.game,\n    particleTemplate: {\n      renderer: {\n        color: '#424242',\n        background: '#e6e6e6',\n        character: '〣'\n      }\n    }\n  }));\n}","import { MultiTargetAttack} from '../../actions';\nimport { ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../../constants';\n\nexport const leafWhirlwind = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let targetPositions = [\n    {\n      x: actor.pos.x - 1,\n      y: actor.pos.y,\n    },\n    {\n      x: actor.pos.x - 1,\n      y: actor.pos.y - 1,\n    },\n    {\n      x: actor.pos.x,\n      y: actor.pos.y - 1,\n    },\n    {\n      x: actor.pos.x + 1,\n      y: actor.pos.y - 1,\n    },\n    {\n      x: actor.pos.x + 1,\n      y: actor.pos.y,\n    },\n    {\n      x: actor.pos.x + 1,\n      y: actor.pos.y + 1,\n    },\n    {\n      x: actor.pos.x,\n      y: actor.pos.y + 1,\n    },\n    {\n      x: actor.pos.x - 1,\n      y: actor.pos.y + 1,\n    },\n  ]\n\n  actor.setNextAction(new MultiTargetAttack({\n    targetPositions,\n    game: engine.game,\n    actor,\n    energyCost: (ENERGY_THRESHOLD * 8),\n    particleTemplate: PARTICLE_TEMPLATES.leaf,\n  }))\n}","import * as StatusEffect from '../../statusEffects';\nimport { AddStatusEffect } from '../../actions';\n\nexport const openInnerGate = (engine) => {\n  let currentActor = engine.actors[engine.currentActor];\n  let nextGate = currentActor.setNextGate();\n  if (nextGate) {\n    let effect = new StatusEffect.Base({\n      game: engine.game,\n      actor: currentActor,\n      name: nextGate.name,\n      lifespan: -1,\n      stepInterval: 100,\n      allowDuplicates: false,\n      onStart: () => {\n        currentActor.speed += nextGate.speedBuff;\n        currentActor.energy += nextGate.speedBuff;\n        currentActor.attackDamage += nextGate.damageBuff;\n        currentActor.renderer.character = nextGate.character;\n        console.log(`${currentActor.name} opened the ${nextGate.name}.`);\n        currentActor.decreaseDurability(nextGate.durabilityDebuff);\n        currentActor.decreaseDurability(0);\n        console.log(`${currentActor.name} suffers ${nextGate.durabilityDebuff} damage from physical stress.`)\n        let nextGateToLabel = currentActor.getNextGate();\n        if (nextGateToLabel) {\n          currentActor.keymap.o.label = nextGateToLabel.name;\n        } else {\n          delete currentActor.keymap.g;\n        }\n      },\n    });\n    currentActor.setNextAction(new AddStatusEffect({\n      effect,\n      actor: currentActor,\n      game: engine.game,\n      processDelay: 25,\n      particleTemplate: {\n        renderer: {\n          color: '#3cc2bb',\n          background: '#24fe88',\n          character: '#'\n        }\n      }\n    }));\n  }\n}","import * as Helper from '../helper';\nimport { Particle } from './entites';\nimport { PARTICLE_TEMPLATES } from './constants';\nimport RockLee from './Characters/RockLee';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.energyCost;\n        while (true) {\n          action.onBefore();\n          let result = await action.perform();\n          if (result.success) {\n            action.onSuccess();\n          } else {\n            action.onFailure();\n          }\n          action.onAfter();\n          if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      this.game.backToTitle();\n      return false;\n    }\n    \n    if (actor.keymap) {\n      this.game.visibleKeymap = actor.keymap;\n    }\n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n    console.log(this.actors);\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    if (actor.keymap) {\n      this.game.visibleKeymap = actor.keymap;\n    }\n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n}","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport { addActor as addWaveEnemy } from './Keymap/KeyActions/addActor';\nimport * as Message from './message';\n\nconst GAME_MODE_TYPES = {WAVE: 0};\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    display = new ROT.Display({ \n      // forceSquareRatio: true,\n      width: 90,\n      // height: 100,\n      fontSize: 24, \n      bg: '#424242' \n    }),\n    tileKey = Constant.TILE_KEY,\n    mode = {\n      type: GAME_MODE_TYPES.WAVE,\n      data: {\n        level: 1,\n        highestLevel: null,\n      }\n    },\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.display = display;\n    this.tileKey = tileKey;\n    this.mode = mode;\n    this.messages = messages;\n  }\n\n  initializeMode () {\n    if (this.mode.type === GAME_MODE_TYPES.WAVE) {\n      let highestLevel = localStorage.getItem('hidden_leaf_rl__highestLevel');\n      if (!highestLevel) { \n        highestLevel = this.mode.data.level;\n      } else { \n        highestLevel = Math.max(highestLevel , this.mode.data.level);\n      }\n      localStorage.setItem('hidden_leaf_rl__highestLevel', highestLevel);\n      this.mode.data.highestLevel = highestLevel\n      for (let i = 0; i < Math.pow(this.mode.data.level, 2); i++) {\n        addWaveEnemy(this);\n      }\n    }\n  }\n  \n  updateMode () {\n    if (this.mode.type === GAME_MODE_TYPES.WAVE) {\n      const nonPlayerCharacters = this.engine.actors.filter((actor) => !actor.entityTypes.includes('PLAYING'));\n      if (!nonPlayerCharacters.length) {\n        this.nextModeLevel();\n        this.initializeMode();\n      }\n    }\n  }\n\n  setModeLevel (level) {\n    this.mode.data.level = level;\n  }\n\n  nextModeLevel () {\n    this.setModeLevel(this.mode.data.level + 1);\n  }\n  \n  resetMode () {\n    this.setModeLevel(1);\n    this.initializeMode();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    // let digger = new ROT.Map.Arena();\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    let digger = new ROT.Map.Digger();\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {\n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      let currentFrame = 0;\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n\n      if (Constant.TILE_KEY[type].animation) {\n        currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n      }\n\n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n    this.randomlyPlaceAllActorsOnMap()\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show () {\n    let d = document.getElementById('display')\n    d.appendChild(this.display.getContainer())\n  }\n\n  draw () {\n    for (let key in this.map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = this.map[key];\n      let { character, foreground, background } = this.tileKey[tile.type]\n\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      character = nextFrame.character;\n      foreground = nextFrame.foreground;\n      background = nextFrame.background;\n\n      if (tile.entities.length > 0) {\n        let entity = tile.entities[tile.entities.length - 1]\n        nextFrame = this.animateEntity(entity);\n        \n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      this.display.draw(x, y, character, foreground, background);\n    }\n  }\n\n  animateEntity (entity) {\n    let renderer = entity.renderer;\n    let {character, color, background} = {...renderer}\n    if (renderer.animation) {\n      let frame = renderer.animation[entity.currentFrame];\n\n      character = frame.character;\n      color = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground: color, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = {...renderer}\n    if (renderer.animation) {\n      let frame = renderer.animation[tile.currentFrame];\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initialize (presserRef) {\n    this.engine.game = this;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    this.show();\n    this.createLevel();\n    this.draw();\n    presserRef.current.focus();\n    this.initializeMode();\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = actor.keymap;\n    let code = event.key;\n    if (!(code in keymap)) { return; }\n    keymap[code]['activate']();\n    engine.start()\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color} darken-3`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    return (\n      <div className=\"Information UI\">\n        <div className='flow-text'>Information</div>\n        {\n          this.props.data && (\n            this.props.data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\nimport Button from './Button';\n\nclass Equipment extends React.Component {\n  render() {\n    return (\n      <div className=\"Equipment UI\">\n        {\n          this.props.equipment && (\n            <div>\n              <div className='flow-text'>Equipment</div>\n              <div>\n                {\n                  this.props.equipment.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {slot.name} {slot.item ? slot.item.renderer.character : ''}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\nimport Button from './Button';\n\nclass Keymap extends React.Component {\n  render() {\n    return (  \n      <div className=\"Keymap UI\">\n        <div className='flow-text'>Keymap</div>\n        {\n          \n          this.props.keymap && (\n            Object.entries(this.props.keymap).map(([key, value], index) => {\n              return (\n                <Button key={index} onClick={() => null}>\n                  {key} {value.label}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Keymap;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../engine';\nimport * as Game from '../game';\nimport Information from '../UI/Information';\nimport Equipment from '../UI/Equipment';\nimport Inventory from '../UI/Inventory';\nimport KeymapUI from '../UI/Keymap';\nimport Messages from '../UI/Messages';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let actor = this.props.selectedCharacter.initialize(ENGINE);\n    ENGINE.actors.push(actor)\n    let game = new Game.Game({ engine: ENGINE })\n\n    this.state = {\n      game: game,\n      activeTab: 0,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  render() {\n    let currentActor = this.state.game.engine.actors[this.state.game.engine.currentActor];\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.state.game.mode.data.level}, Highest: ${this.state.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.state.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.state.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Level\">\n        <div className='flow-text'>Chunin Exams</div>\n        <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button>\n        <div className='row'>\n          <div className='col s8 game_display_container'>\n            {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            <Information data={data} />\n          </div>\n          <div className='col s2'>\n            <KeymapUI keymap={this.state.game.visibleKeymap} />\n          </div>\n          <div className='col s2'>\n            <Equipment equipment={this.state.game.visibleEquipment} />\n            <Inventory inventory={this.state.game.visibleInventory} />\n          </div>\n          {\n            !this.state.game.visibleEquipment && !this.state.game.visibleInventory && (\n              <div className='col s2'>\n                <Messages messages={this.state.game.messages.slice(-15).reverse()} />\n              </div>\n            )\n          }\n          {/* <div className='col s2'>\n            <Messages messages={this.state.game.messages.slice(-15).reverse()} />\n          </div>\n          <div className='col s2'>\n            <Messages messages={this.state.game.messages} />\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport { SCREENS } from './constants';\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              className={`CharacterSelect__button btn ${color}`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#e2e2e2',\n          }}\n        >\n          <div class='flow-text grey-text'>Hidden Leaf RL</div>\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n        />\n          <button \n            class='btn' \n            onClick={() => this.props.setActiveScreen(SCREENS.LEVEL)}\n            disabled={!this.props.selectedCharacter}\n          >\n            Play\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","// import deps\nimport * as Item from '../items';\nimport * as Entity from '../entites';\nimport * as Constant from '../constants';\nimport * as Keymap from '../Keymap';\nimport { createEightDirectionMoveOptions } from '../Keymap/helper';\n\n// create class\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine) => {\n    return {\n      ...createEightDirectionMoveOptions(Keymap.walk, engine),\n      s: {\n        activate: () => Keymap.none(engine),\n        label: 'stay',\n      },\n      l: {\n        activate: () => Keymap.sandClone(engine),\n        label: 'Sand Clone',\n      },\n      k: {\n        activate: () => Keymap.sandTomb(engine),\n        label: 'Sand Tomb',\n      },\n      j: {\n        activate: () => Keymap.sandSkin(engine, 2),\n        label: 'Sand Skin',\n      },\n      h: {\n        activate: () => Keymap.sandWall(engine),\n        label: 'Sand Wall',\n      },\n      g: {\n        activate: () => Keymap.sandPulse(engine),\n        label: 'Sand Pulse',\n      },\n      i: {\n        activate: () => Keymap.activateInventory(engine),\n        label: 'Open Inventory',\n      },\n      o: {\n        activate: () => Keymap.activateEquipment(engine),\n        label: 'Open Equipment',\n      },\n      u: {\n        activate: () => Keymap.activateDropItem(engine),\n        label: 'Drop Item',\n      },\n      p: {\n        activate: () => Keymap.pickupRandom(engine),\n        label: 'Pickup',\n      },\n      t: {\n        activate: () => Keymap.activateThrow(engine),\n        label: 'Throw',\n      },\n      // DEV KEYS\n      y: {\n        activate: () => Keymap.addActor(engine.game),\n        label: 'Add NPC',\n      },\n    };\n  }\n\n\n  let actor = new Entity.Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'G',\n      color: '#F0D8C0',\n      background: '#603030',\n    },\n    name: 'Gaara',\n    actions: [],\n    speed: 200,\n    durability: 15,\n    cloneLimit: 3,\n    keymap: keymap(engine),\n    defense: 2,\n  })\n\n  const kunais = Array(3).fill('').map(() => Item.sandShuriken(engine, { ...actor.pos }, null, 10));\n  const swords = Array(2).fill('').map(() => Item.sword(engine));\n  actor.container = [\n    new Entity.ContainerSlot({\n      itemType: kunais[0].name,\n      items: kunais,\n    }),\n    new Entity.ContainerSlot({\n      itemType: swords[0].name,\n      items: swords,\n    }),\n  ]\n\n  return actor;\n}\n// export instance","import { CloneSelf } from '../../actions';\nimport { cloneDeep } from 'lodash';\n\nexport const sandClone = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let cloneKeymap = cloneDeep(actor.keymap);\n  delete cloneKeymap['j'];\n  delete cloneKeymap['k'];\n  delete cloneKeymap['l'];\n  let cloneArgs = [\n    {\n      attribute: 'renderer',\n      value: { ...actor.renderer, background: '#A89078' }\n    },\n    {\n      attribute: 'keymap',\n      value: cloneKeymap\n    }\n  ];\n  actor.setNextAction(new CloneSelf({\n    game: engine.game,\n    actor,\n    cloneArgs,\n  }))\n}","import * as StatusEffect from '../../statusEffects';\nimport { AddStatusEffect } from '../../actions';\n\nexport const sandSkin = (engine, defenseBuff = 1) => {\n  let currentActor = engine.actors[engine.currentActor];\n  let effect = new StatusEffect.Base({\n    game: engine.game,\n    actor: currentActor,\n    name: 'Sand Skin',\n    lifespan: 1000,\n    stepInterval: 100,\n    allowDuplicates: false,\n    onStart: () => {\n      currentActor.defense += defenseBuff;\n      console.log(`${currentActor.name} was enveloped in hardened sand.`);\n      currentActor.renderer.background = '#A89078'\n    },\n    onStop: () => {\n      currentActor.defense = Math.max(0, currentActor.defense - defenseBuff);\n      console.log(`${currentActor.name}'s hardened sand skin fell away.`);\n      currentActor.renderer.background = '#603030';\n    },\n  });\n  currentActor.setNextAction(new AddStatusEffect({\n    effect,\n    actor: currentActor,\n    game: engine.game,\n    particleTemplate: {\n      renderer: {\n        character: '✦️',\n        color: '#A89078',\n        background: '#D8C0A8',\n      }\n    },\n  }));\n}","// import deps\nimport * as Constant from '../constants';\nimport * as Item from '../items';\nimport * as Entity from '../entites';\nimport * as Keymap from '../Keymap';\nimport { createEightDirectionMoveOptions } from '../Keymap/helper';\n// create class\n\nconst keymap = (engine) => {\n  return {\n    ...createEightDirectionMoveOptions(Keymap.walk, engine),\n    i: {\n      activate: () => Keymap.activateInventory(engine),\n      label: 'Open Inventory',\n    },\n    q: {\n      activate: () => Keymap.activateEquipment(engine),\n      label: 'Open Equipment',\n    },\n    k: {\n      activate: () => Keymap.cloneSelf(engine),\n      label: 'Clone Self',\n    },\n    g: {\n      activate: () => Keymap.activateDropItem(engine),\n      label: 'Drop Item',\n    },\n    p: {\n      activate: () => Keymap.pickupRandom(engine),\n      label: 'Pickup',\n    },\n    t: {\n      activate: () => Keymap.activateThrow(engine),\n      label: 'Throw',\n    },\n    y: {\n      activate: () => Keymap.addActor(engine.game),\n      label: 'Add NPC',\n    },\n    c: {\n      activate: () => Keymap.charge(engine, 1),\n      label: 'Charge',\n    },\n    '1': {\n      activate: () => Keymap.sign(Constant.HAND_SIGNS.Power, engine),\n      label: 'Sign - Power',\n    },\n    '2': {\n      activate: () => Keymap.sign(Constant.HAND_SIGNS.Healing, engine),\n      label: 'Sign - Healing',\n    },\n    '3': {\n      activate: () => Keymap.sign(Constant.HAND_SIGNS.Absolute, engine),\n      label: 'Sign - Absolution',\n    },\n    r: {\n      activate: () => Keymap.signRelease(engine),\n      label: 'Release',\n    },\n  };\n}\n\nexport default function (engine) {\n  let actor = new Entity.Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'N',\n      color: 'black',\n      background: 'orange',\n    },\n    name: 'Naruto Uzumaki',\n    actions: [],\n    speed: 600,\n    durability: 1,\n    keymap: keymap(engine),\n  })\n\n  actor.container = [\n    Item.sword(engine),\n    Item.sword(engine),\n    Item.sword(engine),\n    ...Array(10).fill('').map(() => Item.kunai(engine, { ...actor.pos })),\n  ]\n\n  return actor;\n}\n// export instance","import { CloneSelf } from '../../actions';\n\nexport const cloneSelf = (engine, cloneOverrides = []) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new CloneSelf({\n    game: engine.game,\n    actor,\n    cloneArgs: cloneOverrides,\n  }));\n};","import { Charge, Release } from '../../actions';\nimport { ENERGY_THRESHOLD } from '../../constants';\n\nexport const charge = (engine, chargeAmount) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Charge({\n    chargeAmount,\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }));\n};\n\nexport const release = (engine, chargeCost) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new Release({\n    chargeCost,\n    game: engine.game,\n    actor,\n    energyCost: ENERGY_THRESHOLD\n  }));\n};","import RockLee from './RockLee';\nimport Gaara from './Gaara';\nimport NarutoUzumaki from './NarutoUzumaki';\n\nlet Characters = () => {\n  return {\n    RockLee,\n    Gaara,\n    NarutoUzumaki,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Level from './Screen/Level';\nimport Title from './Screen/Title';\nimport Characters from './Characters/index';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        // [key]: characterKey[key],\n        initialize: characterKey[key],\n        selected: false,\n        name: key,\n      }\n    });\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      selectedCharacter: null,\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  getActiveScreen () {\n    const titleScreen = <Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import * as ROT from 'rot-js';\n\nexport const TILE_KEY = () => {\n  return {\n    'GROUND': {\n      background: '#974',\n      foreground: '#aaa',\n      character: '.',\n      passable: true,\n    }\n  }\n}\n\n// RENDERING\n\nexport const DRAW = (map, display) => {\n  for (let key in map) {\n    let parts = key.split(\",\");\n    let x = parseInt(parts[0]);\n    let y = parseInt(parts[1]);\n    let tile = map[key];\n    let { character, foreground, background } = TILE_KEY()[tile.type]\n    if (tile.entities.length > 0) {\n      let entity = tile.entities[tile.entities.length - 1]\n      character = entity.components.renderer.character\n      foreground = entity.components.renderer.color\n      if (entity.components.renderer.background) {\n        background = entity.components.renderer.background\n      }\n    }\n    display.draw(x, y, character, foreground, background);\n  }\n}\n\n// END RENDERING\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nexport const getImpassableEntities = (entities) => {\n  return entities.filter((e) => e.components.hasOwnProperty('impasse') && !e.components.impasse.passable)\n}\n\nexport const getDestructableEntities = (entities) => {\n  return entities.filter((e) => e.components.hasOwnProperty('destructible'))\n}\n\nexport const delay = (timeDelayed = 100) => {\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const exampleEngine = () => {\n  let scheduler = new ROT.Scheduler.Simple();\n  let engine = new ROT.Engine(scheduler);\n  let output = [];\n  /* sample actor: pauses the execution when dead */\n  let actor = {\n    lives: 3,\n    act: function () {\n      let done = null;\n      let promise = {\n        then: function (cb) { done = cb; }\n      }\n\n      output.push(\".\");\n      // SHOW(output.join(\"\"));\n      console.log(output.join(\"\"));\n\n      this.lives--;\n\n      /* if alive, wait for 500ms for next turn */\n      if (this.lives) {\n        setTimeout(function () { done(); }, 500);\n      }\n\n      return promise;\n    }\n  }\n  scheduler.add(actor, true);\n  engine.start();\n}\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}","import * as Helper from '../lib/helper';\n\nexport const createEntity = (id = null, name = 'Empty', components = {}, world) => {\n  let entity = {\n    id,\n    name,\n    components,\n    world,\n    sendEvent: (target, eventType, parameters) => sendEvent(target, eventType, parameters, world),\n  };\n  return entity\n}\n\nexport const sendEvent = async (target = null, eventType = null, parameters = null, world = null) => {\n  let success = false;\n  for (let key in target.components) {\n    let component = target.components[key]\n    if (component.hasOwnProperty(eventType)) {\n      console.log('SUCCESSFUL EVENT: ', eventType)\n      success = true\n      if (eventType !== 'PREPARE_RENDER') {\n        await Helper.delay();\n      }\n      component[eventType]({ ...parameters, self: target, component: component });\n      Helper.DRAW(world.map, world.display)\n    }\n  }\n  if (!success) {\n    console.log('FAILED EVENT')\n  }\n};","import * as Helper from '../lib/helper';\n\nexport const receiver = (pos) => {\n  return {\n    responded: false,\n    RECIEVE: (parameters) => {\n      let { self, component, message } = parameters\n      console.log(message, pos.x, pos.y)\n      if (!component.responded) {\n        component.responded = true\n        self.sendEvent(parameters.sender, 'hello', 'RECIEVE', { message: 'copy', sender: self })\n      }\n    }\n  }\n}\n\nexport const impasse = (passable = false) => {\n  return {\n    passable,\n    MAKE_PASSABLE: (parameters) => {\n      let { component } = parameters;\n      component.passable = true;\n    },\n    MAKE_IMPASSABLE: (parameters) => {\n      let { component } = parameters;\n      component.passable = false;\n    }\n  }\n}\n\nexport const body = (world, pos = { x: 0, y: 0 }) => {\n  if (world) {\n    return {\n      pos,\n      MOVE: (parameters) => {\n        let { self, component, currentPos, targetPos } = parameters\n        if (world.canOccupy(world.map, targetPos)) {\n          component.pos = targetPos\n          let tile = world.map[Helper.coordsToString(currentPos)]\n          world.map[Helper.coordsToString(currentPos)] = {...tile, entities: []}\n          self.sendEvent(self, 'PREPARE_RENDER')\n          // Helper.DRAW(world.map, world.display)\n        } else {\n          console.log('can\\'t move there')\n        }\n      }\n    }\n  }\n  console.log('No world to occupy');\n  return {}\n}\n\nexport const destructible = (world, durability = 1) => {\n  return {\n    durability,\n    DECREASE_DURABILITY: (parameters) => {\n      let { self, component, value } = parameters;\n      component.durability -= value\n      if (component.durability <= 0) {\n        self.sendEvent(self, 'DESTROY')\n      }\n    },\n    INCREASE_DURABILITY: (parameters) => {\n      let { component, value } = parameters;\n      component.durability += value\n    },\n    DESTROY: (parameters) => {\n      let { self, component, value } = parameters;\n      let tile = world.map[Helper.coordsToString(self.components.body.pos)];\n      world.map[Helper.coordsToString(self.components.body.pos)].entities = tile.entities.filter((e) => e.id !== self.id);\n      // self.sendEvent(self, 'PREPARE_RENDER')\n      // Helper.DRAW(world.map, world.display)\n    }\n  }\n}\n\nexport const attack = (damage = 1) => {\n  return {\n    damage,\n  }\n}\n\nexport const throwable = (world) => {\n  return {\n    THROW: (parameters) => {\n      let { self, component, direction } = parameters;\n      // if next tile is passable\n        // send move action to self\n        // send throw action to self\n      // else\n        // send decrease_durability to entity next in tile\n        // send decrease_durability to self\n      let currentPos = self.components.body.pos;\n      let nextPos = { x: currentPos.x + direction.x, y: currentPos.y + direction.y }\n      let nextTile = world.map[Helper.coordsToString(nextPos)];\n      if (world.canOccupy(world.map, nextPos)) { // change to check for target entity\n        self.sendEvent(\n          self, 'MOVE', {\n            currentPos: currentPos,\n            targetPos: nextPos\n          }\n        )\n        self.sendEvent(self, 'THROW', {direction});\n      } else {\n        if (world.map.hasOwnProperty(Helper.coordsToString(nextPos))) {\n          let impassable_and_destructable_entities = Helper.getDestructableEntities(Helper.getImpassableEntities(nextTile.entities))\n          if (impassable_and_destructable_entities.length > 0) {\n            self.sendEvent(impassable_and_destructable_entities[0], 'DECREASE_DURABILITY', { value: 1 });\n          }\n        }\n        self.sendEvent(self, 'DECREASE_DURABILITY', { value: 1 });\n      }\n    },\n  }\n}\n\nexport const renderer = (world, character = '', color = 'white', background = false) => {\n  return {\n    character,\n    color,\n    background,\n    PREPARE_RENDER: (parameters) => {\n      let { self } = parameters\n      if (self.components.hasOwnProperty('body')) {\n        world.map[Helper.coordsToString(self.components.body.pos)].entities.push(self)\n      }\n    }\n  }\n}","import React from 'react';\nimport '../App.css';\nimport * as ROT from 'rot-js';\nimport * as Entity from './lib/entity'\nimport * as Helper from './lib/helper'\nimport * as Components from './components/index'\n\nconst SHOW = (canvas) => {\n  let d = document.getElementById('display')\n  d.appendChild(canvas)\n}\n\nconst CREATE_LEVEL = (world) => {\n  let digger = new ROT.Map.Arena();\n  let freeCells = [];\n  let digCallback = function (x, y, value) {\n    if (value) { return; }\n    let key = x + \",\" + y;\n    world.map[key] = {\n      type: 'GROUND',\n      entities: [],\n    };\n    freeCells.push(key);\n  }\n  digger.create(digCallback.bind(this));\n}\n\nlet scheduler = new ROT.Scheduler.Simple()\nlet engine = new ROT.Engine(scheduler)\n\nlet world = {\n  canAct: true,\n  scheduler,\n  engine,\n  map: {},\n  display: new ROT.Display({ fontSize: 24, bg: '#099' }),\n  canOccupy: (map, pos) => {\n    if (map.hasOwnProperty(Helper.coordsToString(pos))) {\n      let tile = map[Helper.coordsToString(pos)];\n      if (Helper.TILE_KEY()[tile.type].passable && Helper.getImpassableEntities(tile.entities).length === 0) {\n        return true\n      }\n    } else {\n      return false\n    }\n  },\n}\n\nlet naruto = {\n  ...Entity.createEntity(1, 'Naruto', {\n    reciever: Components.receiver({ x: 10, y: 30 }),\n    body: Components.body(world, { x: 19, y: 21 }),\n    renderer: Components.renderer(world, 'N', 'orange', 'black'),\n  },\n    world,\n  ),\n}\n\nlet box = {\n  ...Entity.createEntity(2, 'Box', {\n    body: Components.body(world, { x: 22, y: 21 }),\n    renderer: Components.renderer(world, '#', 'black'),\n    impasse: Components.impasse(),\n    destructible: Components.destructible(world),\n  },\n    world,\n  )\n}\n\nlet box2 = {\n  ...Entity.createEntity(2, 'Box', {\n    body: Components.body(world, { x: 22, y: 19 }),\n    renderer: Components.renderer(world, '#', 'black'),\n    impasse: Components.impasse(),\n    destructible: Components.destructible(world),\n  },\n    world,\n  )\n}\n\nlet box3 = {\n  ...Entity.createEntity(2, 'Box', {\n    body: Components.body(world, { x: 22, y: 17 }),\n    renderer: Components.renderer(world, '#', 'black'),\n    impasse: Components.impasse(),\n    destructible: Components.destructible(world),\n  },\n    world,\n  )\n}\n\nlet kunai = {\n  ...Entity.createEntity(3, 'Kunai', {\n    body: Components.body(world, { x: 20, y: 21 }),\n    renderer: Components.renderer(world, '<>', 'black'),\n    destructible: Components.destructible(world),\n    attack: Components.attack(),\n    throwable: Components.throwable(world),\n  },\n    world,\n  )\n}\n\nclass Original extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.presserRef = React.createRef();\n  }\n\n  handleKeyPress = (event, world, entity) => {\n    let keymap = {\n      w: 0,\n      d: 1,\n      s: 2,\n      a: 3,\n    };\n\n    let code = event.key;\n    let dir = ROT.DIRS[4][keymap[code]];\n    if (code === 't') {\n      kunai.sendEvent(kunai, 'MOVE', {\n        currentPos: kunai.components.body.pos,\n        targetPos: {\n          x: entity.components.body.pos.x + 1,\n          y: entity.components.body.pos.y,\n        },\n      })\n      return kunai.sendEvent(kunai, 'THROW', { direction: { x: 1, y: 0 } })\n    }\n    if (!(code in keymap)) { return; }\n    let newX = entity.components.body.pos.x + dir[0];\n    let newY = entity.components.body.pos.y + dir[1];\n\n    entity.sendEvent(\n      entity, 'MOVE', {\n        currentPos: entity.components.body.pos,\n        targetPos: {\n          x: newX,\n          y: newY\n        }\n      }\n    )\n\n    return;\n    // return Helper.DRAW(world.map, world.display)\n\n  }\n\n  componentDidMount() {\n    ROT.RNG.setSeed(7);\n    SHOW(world.display.getContainer());\n    CREATE_LEVEL(world);\n    naruto.sendEvent(naruto, 'PREPARE_RENDER')\n    // kunai.sendEvent(kunai, 'PREPARE_RENDER')\n    box.sendEvent(box, 'PREPARE_RENDER')\n    box2.sendEvent(box2, 'PREPARE_RENDER')\n    box3.sendEvent(box3, 'PREPARE_RENDER')\n    Helper.DRAW(world.map, world.display)\n    this.presserRef.current.focus();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" ref={this.presserRef} onKeyDown={(event) => this.handleKeyPress(event, world, naruto)} tabIndex='0'>\n        <div id='display'></div>\n      </div>\n    );\n  }\n}\n\nexport default Original;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\nimport Original from './original/Original';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App container-fluid\">\n        <Nystrum />\n        {/* <Original /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}